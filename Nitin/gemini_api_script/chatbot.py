# -*- coding: utf-8 -*-
"""chatbot.ipynb

Automatically generated by Colab.
Original file is located at
    https://colab.research.google.com/drive/1fJK4b6hrOHPET6qV4M5VHLjPcgZNkr6L

    
    https://colab.research.google.com/drive/1fJK4b6hrOHPET6qV4M5VHLjPcgZNkr6L?usp=sharing
"""

pip install dotenv

from dotenv import load_dotenv
import os
import google.generativeai as genai


load_dotenv()

# get API key from .env
api_key_gemini = os.getenv("google_api_key")

# Configure Gemini
genai.configure(api_key=api_key_gemini)

model = genai.GenerativeModel(model_name="gemini-1.5-flash")

def call_gemini(prompt):
    response = model.generate_content(prompt)
    return response

print("Ask Gemini anything. Type 'exit' to quit.\n")

while True:
    user_prompt = input("You: ")
    if user_prompt.lower() in ["exit", "quit"]:
        print("Goodbye!")
        break

    response = call_gemini(user_prompt)
    print("\nGemini:", response.text)



import ipywidgets as widgets
from IPython.display import display
import google.generativeai as genai
import os
from dotenv import load_dotenv

# Load .env and configure API
load_dotenv()
genai.configure(api_key=os.getenv("google_api_key"))

# Create input widget
input_box = widgets.Text(

    placeholder='Type your question here',
    description='Ask:',

)

# Create output area
output = widgets.Output()

# fnction to call Gemini
def call_gemini(sender):
    output.clear_output()
    prompt = input_box.value
    if not prompt.strip():
        return
    with output:
        model = genai.GenerativeModel(model_name="gemini-1.5-flash")
        response = model.generate_content(prompt)
        print("Gemini's Response:\n")
        print(response.text)

# function call
input_box.on_submit(call_gemini)

# Display
display(input_box,output )